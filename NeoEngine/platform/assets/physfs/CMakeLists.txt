file(GLOB SOURCES src/*.c*)
file(GLOB INCLUDES include/*.h)

if(BUILD_SHARED_LIBS)
	set(PHYSFS_LIBRARIES physfs)
	set(PHYSFS_BUILD_SHARED ON CACHE BOOL "" FORCE)

else()
	set(PHYSFS_BUILD_SHARED OFF CACHE BOOL "" FORCE)
	set(PHYSFS_LIBRARIES  physfs-static)
endif()

set(PHYSFS_BUILD_TEST OFF CACHE BOOL "" FORCE)

# if(OFF AND EMSCRIPTEN)
	set(PHYSFS_ARCHIVE_7Z OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_DIR OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_GRP OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_HOG OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_ISO9660 OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_MVL OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_QPAK OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_SLB OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_VDF OFF CACHE BOOL "" FORCE)
	set(PHYSFS_ARCHIVE_WAD OFF CACHE BOOL "" FORCE)
	
	set(PHYSFS_ARCHIVE_ZIP ON CACHE BOOL "" FORCE)
	
	# add_definitions(-DPHYSFS_POSIX=1)
#endif()

add_subdirectory(physfs-external)

if(APPLE)
	set(COREFOUNDATION "-framework CoreFoundation -framework IOKit -framework AppKit")
endif()

add_platform_module(
	SOURCES ${SOURCES} ${INCLUDES}
	INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/physfs-external/src
	LIBRARIES ${PHYSFS_LIBRARIES} ${COREFOUNDATION})

install(DIRECTORY include/ DESTINATION include)

install(TARGETS ${PHYSFS_LIBRARIES}
		EXPORT FindPhysFS
		RUNTIME DESTINATION bin
		LIBRARY DESTINATION lib
		ARCHIVE DESTINATION lib)
	
install(EXPORT FindPhysFS DESTINATION ${NEO_CMAKE_EXPORT})

