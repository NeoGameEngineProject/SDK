
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
add_subdirectory(zlib-external EXCLUDE_FROM_ALL)

set(ZLIB_FOUND TRUE CACHE BOOL "" FORCE)
set(ZLIB_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/zlib-external/ ${CMAKE_CURRENT_SOURCE_DIR}/zlib-external/ CACHE STRING "" FORCE)

if(BUILD_SHARED_LIBS)
	set(ZLIB_LIBRARY zlib CACHE STRING "" FORCE)
else()
	set(ZLIB_LIBRARY zlibstatic CACHE STRING "" FORCE)
endif()

#install(TARGETS ${ZLIB_LIBRARY}
#		EXPORT FindZlib
#		RUNTIME DESTINATION bin
#		LIBRARY DESTINATION lib
#		ARCHIVE DESTINATION lib)
	
#install(EXPORT FindZlib DESTINATION ${NEO_CMAKE_EXPORT})

set(ZLIB_FOUND ${ZLIB_FOUND}PARENT_SCOPE)
set(ZLIB_LIBRARY ${ZLIB_LIBRARY} PARENT_SCOPE)
set(ZLIB_LIBRARIES ${ZLIB_LIBRARY} PARENT_SCOPE)
set(ZLIB_INCLUDE_DIR ${ZLIB_INCLUDE_DIR} PARENT_SCOPE)

set(LIBZIP_FOUND TRUE PARENT_SCOPE)
set(LIBZIP_LIBRARY zip PARENT_SCOPE)
set(LIBZIP_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/libzip-external ${CMAKE_CURRENT_SOURCE_DIR}/libzip-external/lib PARENT_SCOPE)
set(SKIP_INSTALL_ALL FALSE)

add_subdirectory(libzip-external EXCLUDE_FROM_ALL)

## TODO: Move all 3rdparty modules into top level directory so they can be used everywhere!
add_platform_module(
	SOURCES " "
	INCLUDES ${CMAKE_CURRENT_BINARY_DIR}/libzip-external ${CMAKE_CURRENT_SOURCE_DIR}/libzip-external/lib
	LIBRARIES zip)

set(RAPIDJSON_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/rapidjson-external/include PARENT_SCOPE)
# add_subdirectory(rapidjson-external EXCLUDE_FROM_ALL)

set(FLATBUFFERS_BUILD_TESTS FALSE CACHE BOOL "" FORCE)
set(FLATBUFFERS_BUILD_FLATC TRUE CACHE BOOL "" FORCE)

add_subdirectory(flatbuffers-external)

#install(TARGETS flatbuffers
#		EXPORT FindFlatbuffers
#		RUNTIME DESTINATION bin
#		LIBRARY DESTINATION lib
#		ARCHIVE DESTINATION lib)
#	
#install(EXPORT FindFlatbuffers DESTINATION ${NEO_CMAKE_EXPORT})

# libpng
set(PNG_BUILD_ZLIB OFF)
set(PNG_TESTS OFF CACHE BOOL "" FORCE)
set(SKIP_INSTALL_ALL ON) # CACHE BOOL "" FORCE)

if(BUILD_SHARED_LIBS)
	set(PNG_LIBRARY png CACHE STRING "" FORCE)
	#set(PNG_STATIC OFF CACHE BOOL "" FORCE)
	#set(PNG_SHARED ON CACHE BOOL "" FORCE)
else()
	set(PNG_LIBRARY png_static CACHE STRING "" FORCE)
	#set(PNG_STATIC ON CACHE BOOL "" FORCE)
	#set(PNG_SHARED OFF CACHE BOOL "" FORCE)
endif()

add_subdirectory(libpng-external EXCLUDE_FROM_ALL)

set(PNG_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libpng-external/ ${CMAKE_CURRENT_BINARY_DIR}/libpng-external/ CACHE STRING "" FORCE)
set(PNG_FOUND TRUE CACHE BOOL "" FORCE)
set(PNG_PNG_INCLUDE_DIR ${PNG_INCLUDE_DIR})

set(PNG_FOUND ${PNG_FOUND} PARENT_SCOPE)
set(PNG_LIBRARY ${PNG_LIBRARY} PARENT_SCOPE)
set(PNG_INCLUDE_DIR ${PNG_INCLUDE_DIR} PARENT_SCOPE)

#find_package(Freetype)
#if(NOT FREETYPE_FOUND)
set(FREETYPE_FOUND TRUE PARENT_SCOPE)
set(FREETYPE_LIBRARIES freetype PARENT_SCOPE)
set(FT_WITH_ZLIB TRUE CACHE BOOL "" FORCE)
set(FT_WITH_PNG TRUE CACHE BOOL "" FORCE)

set(FREETYPE_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/freetype2-external/include PARENT_SCOPE)

set(SKIP_INSTALL_ALL FALSE)
add_subdirectory(freetype2-external)
#endif()
