file(GLOB SOURCES src/*.c*)
file(GLOB INCLUDES include/*.h)

if(NOT ENABLE_SDL2_BUILD)
	find_package(SDL2)
endif()

if(NOT SDL2_FOUND)
	set(RENDER_D3D OFF CACHE BOOL "" FORCE)
	set(RENDER_VULKAN OFF CACHE BOOL "" FORCE)
	set(RENDER_KMSDRM OFF CACHE BOOL "" FORCE)
	set(DIRECTX OFF CACHE BOOL "" FORCE)
	set(WASAPI OFF CACHE BOOL "" FORCE)
	set(VIDEO_X11 ON CACHE BOOL "" FORCE)
	set(VIDEO_WAYLAND ON CACHE BOOL "" FORCE)

	if(BUILD_SHARED_LIBS)
		set(SDL_SHARED ON CACHE BOOL "" FORCE)
		set(SDL2_LIBRARY SDL2)
	else()
		set(SDL_SHARED OFF CACHE BOOL "" FORCE)
		set(SDL2_LIBRARY SDL2-static)
	endif()

	add_subdirectory(sdl2-external EXCLUDE_FROM_ALL)
	
	set(SDL2_INCLUDE_DIR
		${CMAKE_CURRENT_BINARY_DIR}/sdl2-external/include
		${CMAKE_CURRENT_SOURCE_DIR}/sdl2-external/include)

	install(TARGETS ${SDL2_LIBRARY} DESTINATION lib)
	install(DIRECTORY sdl2-external/include/ DESTINATION include/SDL2)
endif()

add_platform_module(
	SOURCES ${SOURCES} ${INCLUDES}
	INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/../../include ${SDL2_INCLUDE_DIR}
	LIBRARIES "${SDL2_LIBRARY}")
	
install(DIRECTORY include/ DESTINATION include)

#install(TARGETS ${SDL2_LIBRARY}
#		EXPORT FindSDL2
#		RUNTIME DESTINATION bin
#		LIBRARY DESTINATION lib
#		ARCHIVE DESTINATION lib)
	
#install(EXPORT FindSDL2 DESTINATION ${NEO_CMAKE_EXPORT})

